@{
    ViewData["Title"] = "Events";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@functions {
    public string IsContentActive(string controller, string action)
    {
        string isActive = "";

        if (Context.Request.RouteValues["controller"]!.ToString() == controller &&
            Context.Request.RouteValues["action"]!.ToString() == action)
        {
            isActive = "current-sub-content";
        }

        return isActive;
    }
}

<div class="introduction-container event-introduction ">
    <div class="introduction-content standard-container">
        <div class="introduction-text-container">
            <h1 class="introduction-text-title large-text"><span>ORGANIZATION EVENTS</span></h1>
            <p class="introduction-text-p">
                Welcome to the Events Tab, your go-to destination for a holistic view of the university's colorful event scene! Whether you're gearing up for upcoming activities, immersing yourself in ongoing happenings, or reminiscing about past memorable events, this section has got you covered. Organizers, dive into the details, from event names to dates and locations, all neatly organized for your convenience. Ready to make waves of your own? The "Create Event" button awaits, empowering you to kickstart your event planning journey. Experience the ease of navigation and a centralized hub designed to elevate your event management game. Welcome to the heart of the action, where every detail is at your fingertips!
            </p>
        </div>
        <div class="create-event-container">
            <h2 class="create-event-text medium-text text-glow-white">MAKE YOUR OWN EVENT</h2>
            <a class="create-event-btn pill-box">
                Create Event
            </a>
        </div>
    </div>
</div>

<div class="content-navigation standard-container" id="content-navigation">
    <div id="current-content"></div>
    <button onclick="loadContent('Upcoming')">.
        <h1 class="medium-text" id="upcoming-btn">UPCOMING EVENTS</h1>
    </button>
    <button onclick ="loadContent('Ongoing')">
        <h1 class="medium-text" id="ongoing-btn">ONGOING EVENTS</h1>
    </button>
    <button onclick="loadContent('Previous')">
        <h1 class="medium-text" id="previous-btn">PREVIOUS EVENTS</h1>
    </button>
</div>

<div class="subcontent-container" id="subcontent-container">
    @await Html.PartialAsync("EventsUpcoming")
</div>

@section Scripts {
    @* <script src="~/js/events.js"></script> *@
    <script>
        function loadContent(type) {

            // Remove current-content class from all buttons
            //document.querySelectorAll('.content-navigation button h1').forEach(function (element) {
            //    element.classList.remove('current-content');
            //});

            // Add current-content class to the clicked button
            //document.getElementById(`${type.toLowerCase()}-btn`).classList.add('current-content');

            // Slide to the clicked button
            document.getElementById('current-content').style.transform = `translateX(${type.toLowerCase() === 'upcoming' ? 0 : type.toLowerCase() === 'ongoing' ? 100 : 200}%)`;


            fetch(`/Home/Events${type}`)
                .then(response => response.text())
                .then(data => {
                    document.getElementById('subcontent-container').innerHTML = data;
                    // document.getElementById('subcontent-container').scrollIntoView();
                })
                .catch(error => console.error('Error:', error));
        }
    </script>
}
